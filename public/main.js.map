{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-test-case/add-test-case.component.css","webpack:///./src/app/add-test-case/add-test-case.component.html","webpack:///./src/app/add-test-case/add-test-case.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/display-testcases/display-testcases.component.css","webpack:///./src/app/display-testcases/display-testcases.component.html","webpack:///./src/app/display-testcases/display-testcases.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/loading-page/loading-page.component.css","webpack:///./src/app/loading-page/loading-page.component.html","webpack:///./src/app/loading-page/loading-page.component.ts","webpack:///./src/app/mapping-tc.service.ts","webpack:///./src/app/product-list.service.ts","webpack:///./src/app/select-testcases/SampleTestcasesList.ts","webpack:///./src/app/select-testcases/select-testcases.component.css","webpack:///./src/app/select-testcases/select-testcases.component.html","webpack:///./src/app/select-testcases/select-testcases.component.ts","webpack:///./src/app/subheader-navigation/subheader-navigation.component.css","webpack:///./src/app/subheader-navigation/subheader-navigation.component.html","webpack:///./src/app/subheader-navigation/subheader-navigation.component.ts","webpack:///./src/app/testcase.service.ts","webpack:///./src/app/toll-list/sampleTolls.ts","webpack:///./src/app/toll-list/toll-list.component.css","webpack:///./src/app/toll-list/toll-list.component.html","webpack:///./src/app/toll-list/toll-list.component.ts","webpack:///./src/app/xml-creation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC10ZXN0LWNhc2UvYWRkLXRlc3QtY2FzZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  add-test-case works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-test-case',\r\n  templateUrl: './add-test-case.component.html',\r\n  styleUrls: ['./add-test-case.component.css']\r\n})\r\nexport class AddTestCaseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TollListComponent } from './toll-list/toll-list.component';\r\nimport { SelectTestcasesComponent } from './select-testcases/select-testcases.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoadingPageComponent } from './loading-page/loading-page.component';\r\nimport {AddTestCaseComponent} from './add-test-case/add-test-case.component'\r\nimport { DisplayTestcasesComponent } from './display-testcases/display-testcases.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path : 'incoming-tolls', component: TollListComponent},\r\n  {path : 'incoming-tolls/selectTestSuite', component: SelectTestcasesComponent},\r\n  {path : 'home' , component : HomeComponent},\r\n  {path : 'selectTestSuite', component : SelectTestcasesComponent},\r\n  {path : 'incoming-tolls/selectTestSuite/xmlCreation', component : LoadingPageComponent},\r\n  {path : 'addTestCase', component : AddTestCaseComponent},\r\n  {path : 'categories', component : DisplayTestcasesComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{ title }}\\r\\n  </h1>\\r\\n\\r\\n</div>\\r\\n<app-subheader-navigation></app-subheader-navigation>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component , OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  implements OnInit{\r\n  title = 'UI Framework List';\r\n\r\n  ngOnInit(){\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SubheaderNavigationComponent } from './subheader-navigation/subheader-navigation.component';\r\nimport { TollListComponent } from './toll-list/toll-list.component';\r\nimport { SelectTestcasesComponent } from './select-testcases/select-testcases.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MappingTCService} from './mapping-tc.service';\r\nimport { LoadingPageComponent } from './loading-page/loading-page.component'\r\nimport { XmlCreationService } from './xml-creation.service';\r\nimport { } from '../../node_modules/xmlbuilder'\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AddTestCaseComponent } from './add-test-case/add-test-case.component';\r\nimport  {MatCardModule,MatGridListModule,MatTreeModule, MatIconModule,MatCheckboxModule,MatFormFieldModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {TestcaseService} from  './testcase.service';\r\nimport { DisplayTestcasesComponent } from './display-testcases/display-testcases.component';\r\nimport {NestedTreeControl} from '@angular/cdk/tree';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SubheaderNavigationComponent,\r\n    TollListComponent,\r\n    SelectTestcasesComponent,\r\n    HomeComponent,\r\n    LoadingPageComponent,\r\n    AddTestCaseComponent,\r\n    DisplayTestcasesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    \r\n  ],\r\n  providers: [MappingTCService, XmlCreationService,TestcaseService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".example-tree-invisible {\\r\\n    display: none;\\r\\n  }\\r\\n  \\r\\n  .example-tree ul,\\r\\n  .example-tree li {\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n    list-style-type: none;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzcGxheS10ZXN0Y2FzZXMvZGlzcGxheS10ZXN0Y2FzZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7RUFDZjs7RUFFQTs7SUFFRSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtFQUN2QiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXktdGVzdGNhc2VzL2Rpc3BsYXktdGVzdGNhc2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS10cmVlLWludmlzaWJsZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS10cmVlIHVsLFxyXG4gIC5leGFtcGxlLXRyZWUgbGkge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"\\r\\n<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n      <button mat-icon-button disabled></button>\\r\\n      <mat-checkbox class=\\\"checklist-leaf-node\\\"\\r\\n                    [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                    (change)=\\\"checklistSelection.toggle(node);\\\">{{node.item}}</mat-checkbox>\\r\\n    </mat-tree-node>\\r\\n  \\r\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n      <button mat-icon-button matTreeNodeToggle\\r\\n              [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n        <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n        </mat-icon>\\r\\n      </button>\\r\\n      <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\r\\n                    [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                    (change)=\\\"todoItemSelectionToggle(node)\\\">{{node.item}}</mat-checkbox>\\r\\n    </mat-tree-node>\\r\\n  </mat-tree>\\r\\n\\r\\n  \\r\\n  <!-- Copyright 2018 Google Inc. All Rights Reserved.\\r\\n      Use of this source code is governed by an MIT-style license that\\r\\n      can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit,Injectable } from '@angular/core';\r\nimport { ProductListService } from '../product-list.service';\r\nimport {Testcases } from '../home/applicationName';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\n\r\n/**\r\n * Node for to-do item\r\n */\r\nexport class TodoItemNode {\r\n  children: TodoItemNode[];\r\n  item: string;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n\r\nconst finalArray = {} \r\n\r\n/**\r\n * Checklist database, it can build a tree structured Json object.\r\n * Each node in Json object represents a to-do item or a category.\r\n * If a node is a category, it has children items and new items can be added under the category.\r\n */\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\r\n\r\n  get data(): TodoItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(finalArray, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `TodoItemNode`.\r\n   */\r\n  buildFileTree(obj: object, level: number): TodoItemNode[] {\r\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\r\n      const value = obj[key];\r\n      const node = new TodoItemNode();\r\n      node.item = key;\r\n\r\n      if (value != null) {\r\n        if (typeof value === 'object') {\r\n          node.children = this.buildFileTree(value, level + 1);\r\n        } else {\r\n          node.item = value;\r\n        }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-display-testcases',\r\n  templateUrl: './display-testcases.component.html',\r\n  styleUrls: ['./display-testcases.component.css'],\r\n  providers: [ChecklistDatabase]\r\n})\r\nexport class DisplayTestcasesComponent implements OnInit {\r\n\r\n\r\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\r\n\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\r\n\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n\r\n\r\ncheckLoading :any;\r\n  dataList: Testcases[];\r\n  categoryArray = [];\r\n  modArray = [];\r\n  constructor(private productListService: ProductListService,private database: ChecklistDatabase) {\r\n    this.checkLoading = false;\r\n   }\r\n\r\n   \r\n \r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n\r\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n        ? existingNode\r\n        : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected */\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    return descendants.every(child => this.checklistSelection.isSelected(child));\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.productListService.importList().subscribe(data => {\r\n      this.dataList = data,\r\n        this.findUniqueCategory()\r\n    })\r\n\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    this.database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n     \r\n    });\r\n\r\n  }\r\n\r\n  findUniqueCategory = function () {\r\n    const map = new Map();\r\n    for (const item of this.dataList) {\r\n      if (!map.has(item.categoryName)) {\r\n        map.set(item.categoryName, true);\r\n        this.categoryArray.push(item.categoryName);\r\n        // finalArray.push({ [item.categoryName]: {} })\r\n        finalArray[item.categoryName] = {}\r\n      }\r\n    }\r\n    console.log(finalArray)\r\n    this.findUniqueModule();\r\n  }\r\n\r\n  findUniqueModule = function () {\r\n    const map = new Map();\r\n    const categoryName = Object.keys(finalArray)\r\n    console.log(categoryName)\r\n    categoryName.forEach(cat => {\r\n      this.dataList.forEach(item => {\r\n        if (item.categoryName == cat) {\r\n          if (!map.has(item.moduleName)) {\r\n            map.set(item.moduleName, true);\r\n            finalArray[cat][item.moduleName] = []\r\n          }\r\n        }\r\n      })\r\n    })\r\n    console.log(finalArray)\r\n    this.findTestCase()\r\n  }\r\n\r\n  findTestCase = function () {\r\n    const categoryName = Object.keys(finalArray)\r\n    categoryName.forEach(cat => {\r\n      const moduleName = Object.keys(finalArray[cat])\r\n      moduleName.forEach(modName => {\r\n        this.dataList.forEach(item => {\r\n          if(item.moduleName == modName){\r\n            finalArray[cat][item.moduleName].push(item.testCaseName)\r\n          }\r\n        })\r\n      })\r\n    })\r\n    console.log(\"After testcase fetch\")\r\n    console.log(finalArray);\r\n  }\r\n}\r\n","module.exports = \".example-card{\\r\\n    height: 150px;\\r\\n    width: 300px;\\r\\n   background-color:gray\\r\\n}\\r\\n\\r\\n.textalign{\\r\\n    padding-top: 20%;\\r\\n    text-align: center;\\r\\n    color: black\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtHQUNiO0FBQ0g7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmR7XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOmdyYXlcclxufVxyXG5cclxuLnRleHRhbGlnbntcclxuICAgIHBhZGRpbmctdG9wOiAyMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogYmxhY2tcclxufSJdfQ== */\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n  <div *ngFor=\\\"let product of ProductList\\\">\\r\\n  <mat-grid-tile  (click)=\\\"selectTestCase(product)\\\" routerLink= \\\"/categories\\\"> \\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-content class=\\\"textalign\\\">\\r\\n      {{product.name}}\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-grid-tile> \\r\\n</div> \\r\\n</mat-grid-list>\"","import { Component, OnInit } from '@angular/core';\r\nimport {TestcaseService} from '../testcase.service';\r\nimport {ProductListService} from '../product-list.service';\r\nimport {ApplicationName} from './applicationName';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  ProductList : ApplicationName[];\r\n  constructor(\r\n    private testCaseService : TestcaseService,\r\n    private productListService : ProductListService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.productListService.getApplicationList().subscribe(data => { this.ProductList = data }) ;\r\n  }\r\n\r\n  TestCaseList :any;\r\n\r\n  selectTestCase(productName): void {\r\n    this.productListService.getData(productName);\r\n     \r\n }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRpbmctcGFnZS9sb2FkaW5nLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  loading-page works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {XmlCreationService} from '../xml-creation.service'\r\n\r\n\r\n\r\n@Component({\r\n\r\n  selector: 'app-loading-page',\r\n\r\n  templateUrl: './loading-page.component.html',\r\n\r\n  styleUrls: ['./loading-page.component.css']\r\n\r\n})\r\n\r\nexport class LoadingPageComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(\r\n\r\n    private xmlCreation : XmlCreationService\r\n\r\n  ) { }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.createtestNGXML()\r\n\r\n  }\r\n\r\n  createtestNGXML() : void {\r\n\r\n    // this.xmlCreation.createXML();\r\n\r\n    this.xmlCreation.fetchData()\r\n\r\n  .subscribe(data=>{ console.log(\"Data received\");\r\n\r\n  console.log(data)\r\n\r\n  console.log(JSON.stringify(data));\r\n\r\n    \r\n\r\n  })\r\n\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {TestCaseList} from './select-testcases/SampleTestcasesList';\r\nimport { testCases } from './select-testcases/SampleTestcasesList'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class displayTC {\r\n tollName : String;\r\n testCase : testCases[];\r\n line : String;\r\n}\r\nexport class MappingTCService {\r\n  \r\n  constructor() { \r\n   \r\n  }\r\n  public tempArray = [];\r\n  public flag;\r\n  public mappedTC : displayTC[] = []\r\n  public selectedTolls = [];\r\n\r\n\r\n  getSelectedTolls(selectedTollsUI){\r\n    if(this.selectedTolls.length > 0 ){\r\n      this.clearArray(this.selectedTolls);\r\n    }\r\n  this.selectedTolls = selectedTollsUI;\r\n  }\r\n\r\n  mapTestcases(tollList){\r\n    this.clearArray(this.tempArray)\r\n    tollList.forEach(toll => {\r\n    TestCaseList.forEach(tc =>{\r\n      tc.tollDependency.forEach(ele =>{\r\n        if(ele.TName == toll.tollName){\r\n          toll.testCase.push(tc)\r\n        }\r\n      })\r\n    })\r\n  })\r\n    return tollList;\r\n  }\r\n\r\n  exportSelectedTolls(){\r\n    return this.selectedTolls;\r\n  }\r\n\r\n  clearArray(arr){\r\n     arr.splice(0, arr.length);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { ApplicationName , Testcases} from './home/applicationName';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductListService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  categoryList : any;\r\n\r\n  TestCaseTreeList : any;\r\n  returnURL =\"http://localhost:3000/api/\";\r\n\r\n  getApplicationList(): Observable<ApplicationName[]>{\r\n    return this.http.get<ApplicationName[]>(this.returnURL + \"getApplicationList\");\r\n  }\r\n\r\n  getData(ProductName){\r\n    this.categoryList = this.http.post<Testcases[]>(this.returnURL + \"getData\",ProductName);\r\n    \r\n }\r\n\r\n importList(){\r\n   console.log(\"after Import\")\r\n   console.log(this.categoryList)\r\n   return this.categoryList;\r\n }\r\n\r\n exportList(treeData){  \r\n   console.log(treeData)\r\n  this.TestCaseTreeList = treeData;\r\n }\r\n\r\n importTreeData(){\r\n   console.log(this.TestCaseTreeList)\r\n   return this.TestCaseTreeList;\r\n }\r\n}\r\n","export class testCases {\r\n    id : number;\r\n    name: String;\r\n    checked : boolean;\r\n    tollDependency : tollList[]\r\n}\r\n\r\nclass tollList{\r\n    TName : String;\r\n}\r\n\r\nexport const TestCaseList : testCases[] = [\r\n{id : 1, name : 'TC1', checked : false , tollDependency : [{TName : 'Toll 2'}, {TName : 'Toll 1'}] },\r\n{id : 2, name : 'TC2', checked : false , tollDependency : [{TName : 'Toll 3'}, {TName : 'Toll 2'}] },\r\n{id : 3, name : 'TC3', checked : false , tollDependency : [{TName : 'Toll 4'}, {TName : 'Toll 2'}] },\r\n{id : 4, name : 'TC4', checked : false , tollDependency : [{TName : 'Toll 1'}, {TName : 'Toll 4'}] },\r\n]","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdC10ZXN0Y2FzZXMvc2VsZWN0LXRlc3RjYXNlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div >\\r\\n    <form id = \\\"selectSuite\\\" >\\r\\n        <ul>\\r\\n            <li>\\r\\n                <input type=\\\"checkbox\\\" id = \\\"SelectAll\\\" (click) = \\\"selectAll()\\\">\\r\\n                <label id = \\\"SelectAll\\\" for = \\\"SelectAll\\\">Select All Testcases</label><br>\\r\\n            </li>\\r\\n\\r\\n            <li *ngFor = \\\"let tcObjects of displayTC\\\" >\\r\\n                    <ul>\\r\\n                        <li *ngFor = \\\"let tc of tcObjects.testCase\\\">\\r\\n                            <input type=\\\"checkbox\\\" id = {{tc.id}} (click) = \\\"toggle(tcObjects, tc.id)\\\">\\r\\n                            <label id = {{tc.id}} for = {{tc.name}}>{{tc.name}}</label>\\r\\n                               \\r\\n                        </li>\\r\\n                        <p>{{tcObjects.line}}</p> \\r\\n                    </ul>\\r\\n                    \\r\\n            </li>\\r\\n       \\r\\n           <input type = \\\"submit\\\" value=\\\"Submit selected tc\\\" (click) = \\\"createXml()\\\" routerLink = '/incoming-tolls/selectTestSuite/xmlCreation' >\\r\\n       \\r\\n        </ul>\\r\\n   </form>\\r\\n    \\r\\n   </div>\\r\\n \"","import { Component, OnInit } from '@angular/core';\r\nimport { MappingTCService, displayTC} from '../mapping-tc.service';\r\nimport { XmlCreationService } from '../xml-creation.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-select-testcases',\r\n  templateUrl: './select-testcases.component.html',\r\n  styleUrls: ['./select-testcases.component.css']\r\n})\r\nexport class SelectTestcasesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private mappingService: MappingTCService,\r\n    private xmlCreation : XmlCreationService\r\n  ) { }\r\n  public selectedTCs = [];\r\n  public displayTC;\r\n  public index;\r\n\r\n  ngOnInit() {\r\n    this.selectedTCs = [];\r\n    this.displayTC = [];\r\n    if(this.displayTC.length > 0){\r\n      this.clearArray(this.displayTC)\r\n    }\r\n    this.getMappedList();\r\n\r\n    this.displayTC.forEach(tcObject => {\r\n      tcObject.testCase.forEach( tc => {\r\n        tc.checked = false\r\n      })\r\n    })\r\n  }\r\n\r\n  clearArray(arr){\r\n    arr.splice(0, arr.length);\r\n }\r\n  \r\n  getMappedList() : void {\r\n      this.mappingService.exportSelectedTolls().map(toll =>{\r\n      this.displayTC.push({tollName: toll, testCase : [], line : 'for toll ' + toll})\r\n    })\r\n    this.displayTC = this.mappingService.mapTestcases(this.displayTC);\r\n   }\r\n\r\n   public toggle(tcObject, id){\r\n      this.index = this.displayTC.indexOf(tcObject);\r\n      console.log(\"index \"+ tcObject.tollName + \"  \" + this.index)\r\n      this.displayTC[this.index].testCase.forEach(ele => {\r\n          if(ele.id == id){\r\n            if(!ele.checked){\r\n              ele.checked = true\r\n              console.log(\"changed to true on toggle \")\r\n              console.log(ele)\r\n            }\r\n            else{\r\n              ele.checked = false\r\n              console.log(\"changed to false on toggle \")\r\n              console.log(ele)\r\n            }\r\n          }\r\n      })\r\n    console.log(tcObject)\r\n    console.log(\"display tc after toggle\")\r\n    console.log(this.displayTC)\r\n   }\r\n   \r\n public submittestCases(){\r\n   this.clearArray(this.selectedTCs)\r\n   console.log(\"after selection\")\r\n   console.log(this.displayTC)\r\n  this.displayTC.forEach(element => {\r\n    element.testCase.forEach(e => {\r\n      if(this.checkStatus(e)){\r\n        this.selectedTCs.push(e.name);\r\n      }\r\n    });\r\n  });\r\n  console.log(this.selectedTCs)\r\n }\r\n\r\n\r\n\r\n public checkStatus(ele){\r\n   return ele.checked;\r\n }\r\n\r\n public selectAll(){\r\n  this.displayTC.forEach(element => {\r\n    element.checked = true;\r\n  })\r\n }\r\n\r\n public createXml(){\r\n  this.submittestCases();\r\n  if(this.selectedTCs.length < 1){\r\n    console.log(\"No testcases selected\");\r\n  }\r\n  else{\r\n    console.log(\"Create  XML file for testNG suite\");\r\n    this.xmlCreation.exportData(this.selectedTCs);\r\n \r\n  }\r\n   \r\n }\r\n}","module.exports = \"ul#menu {\\r\\n    text-align: center;\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    overflow: hidden;\\r\\n    background-color: #333333;\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n  }\\r\\n  \\r\\n  li {\\r\\n    text-align: center;\\r\\n    float: left;\\r\\n  }\\r\\n  \\r\\n  li a {\\r\\n    \\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    padding: 16px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  \\r\\n  li a:hover {\\r\\n    background-color: #111111;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3ViaGVhZGVyLW5hdmlnYXRpb24vc3ViaGVhZGVyLW5hdmlnYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsU0FBUztJQUNULFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLHdCQUFnQjtJQUFoQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztFQUNiOztFQUVBOztJQUVFLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsImZpbGUiOiJzcmMvYXBwL3N1YmhlYWRlci1uYXZpZ2F0aW9uL3N1YmhlYWRlci1uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCNtZW51IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgfVxyXG4gIFxyXG4gIGxpIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gIH1cclxuICBcclxuICBsaSBhIHtcclxuICAgIFxyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTZweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgbGkgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExMTExO1xyXG4gIH0iXX0= */\"","module.exports = \"<ul id = \\\"menu\\\">\\r\\n    <li >\\r\\n        <h2><a routerLink= \\\"home\\\">Home</a></h2>\\r\\n    </li>    \\r\\n  <li >\\r\\n    <h2><a id = \\\"incoming-tolls\\\" routerLink= \\\"/incoming-tolls\\\">Tolls</a></h2>\\r\\n  </li>\\r\\n  <li>\\r\\n    <h2><a routerLink= \\\"/selectTestSuite\\\" >Testcases</a></h2>\\r\\n  </li>\\r\\n  <li>\\r\\n    <h2><a routerLink=\\\"/addTestCase\\\" >Add Test Case</a></h2>\\r\\n  </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-subheader-navigation',\r\n  templateUrl: './subheader-navigation.component.html',\r\n  styleUrls: ['./subheader-navigation.component.css']\r\n})\r\nexport class SubheaderNavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestcaseService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  returnURL =\"http://localhost:3000/api/scheduler\";\r\n\r\n  getTestCase(ProductName) : Observable<any[]>{\r\n     return this.http.post<any[]>(this.returnURL,ProductName);\r\n  }\r\n\r\n\r\n}\r\n","class TOLLStructure{\r\n    id : String;\r\n    name : String;\r\n    checked: boolean;\r\n}\r\n\r\nexport const TOLLS : TOLLStructure [] = [\r\n{id : 'TID1' , name : 'Toll 1', checked : false},\r\n{id : 'TID2' , name : 'Toll 2', checked : false},\r\n{id : 'TID3' , name : 'Toll 3', checked : false},\r\n{id : 'TID4' , name : 'Toll 4', checked : false}\r\n\r\n]","module.exports = \"#selectCheckboxes{\\r\\n    color: black;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9sbC1saXN0L3RvbGwtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3RvbGwtbGlzdC90b2xsLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzZWxlY3RDaGVja2JveGVze1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59Il19 */\"","module.exports = \"<div ng-app = \\\"app\\\" ng-controller = \\\"selectTolls\\\">\\r\\n <form id = \\\"selectTolls\\\" name = \\\"selectTolls\\\">\\r\\n    <ul>\\r\\n        <li>\\r\\n            <input type=\\\"checkbox\\\" name = \\\"selectAll\\\" id = \\\"SelectAll\\\" (change) = \\\"selectAll()\\\" ng-model = \\\"all\\\">\\r\\n            <label id = \\\"SelectAll\\\" for = \\\"SelectAll\\\">Select All tolls</label><br>\\r\\n        </li>\\r\\n\\r\\n    <li *ngFor = \\\"let toll of tolls\\\" >\\r\\n        <input type=\\\"checkbox\\\" id = {{toll.id}} (click) = \\\"toggle(toll)\\\" [(checked)] = \\\"all\\\">\\r\\n        <label id = {{toll.id}} for = {{toll.name}}>{{toll.name}}</label><br>\\r\\n    </li>\\r\\n        <input type = \\\"submit\\\" value=\\\"Submit selected values\\\"  (click)=\\\"submitTolls()\\\" routerLink= \\\"/incoming-tolls/selectTestSuite\\\" >\\r\\n    </ul>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit, Directive } from '@angular/core';\r\nimport {TOLLS} from './sampleTolls';\r\nimport { MappingTCService } from '../mapping-tc.service';\r\n\r\n@Component({\r\n  selector: 'app-toll-list',\r\n  templateUrl: './toll-list.component.html',\r\n  styleUrls: ['./toll-list.component.css']\r\n})\r\nexport class TollListComponent implements OnInit {\r\n  public all = false;\r\n  public tolls = TOLLS;\r\n  public selectedTolls = [];\r\n  public mapTestCases = [];\r\n  public emptyCheckboxes = false;\r\n  constructor(\r\n    private mappingService: MappingTCService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.tolls.forEach(element => {\r\n      element.checked = false;\r\n    })\r\n   }\r\n \r\n public submitTolls(){\r\n  this.tolls.forEach(element => {\r\n   if (element.checked) {\r\n     \r\n     this.selectedTolls.push(element.name);\r\n     }\r\n  });\r\n  console.log(this.selectedTolls);\r\n  this.mappingService.getSelectedTolls(this.selectedTolls);\r\n }\r\n\r\n public toggle(ele){\r\n  if (!ele.checked){\r\n    ele.checked = true;\r\n  }\r\n  else{\r\n    ele.checked = false;\r\n  }\r\n }\r\n\r\n public checkStatus(ele){\r\n   return ele.checked;\r\n }\r\n\r\n public selectAll(){\r\n  this.all = !this.all;\r\n  if(this.all){\r\n    this.tolls.forEach(element => {\r\n      element.checked = true;\r\n  })\r\n  }\r\n  else{\r\n    this.tolls.forEach(element => {\r\n      element.checked = false;\r\n  })\r\n  }\r\n }\r\n\r\n}","import { Observable, of } from 'rxjs';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport * as fileSaver from '../../node_modules/file-saver'\r\n\r\nimport * as builder from '../../node_modules/xmlbuilder'\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n\r\n  providedIn: 'root'\r\n\r\n})\r\n\r\nexport class XmlCreationService {\r\n\r\n\r\n\r\n\r\n\r\n  returnURL =\"http://localhost:3000/api/scheduler\";\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n\r\n\r\n  }\r\n\r\n   public dataForXML;\r\n\r\n   \r\n\r\n   public exportData (selectedData){\r\n\r\n    this.dataForXML = selectedData\r\n\r\n   }\r\n\r\n\r\n\r\n   \r\n\r\n   xml : any;\r\n\r\n   data;\r\n\r\n  public createXML(){\r\n\r\n    this.xml = builder.create('suite', {'type' : 'Suite',  'encoding' : 'UTF-8'})\r\n\r\n    .ele('test', {'name': 'Test'},)\r\n\r\n    .ele('classes')\r\n\r\n \r\n\r\n    var classTag = this.xml;\r\n\r\n     this.dataForXML.forEach(ele => {\r\n\r\n          classTag.ele('class', {'name' : ele})\r\n\r\n    })\r\n\r\n    console.log(\"final xml\")\r\n\r\n    this.xml = this.xml.end({pretty : true})\r\n\r\n    console.log(this.xml)\r\n\r\n    var blob = new Blob([this.xml], {type: \"text/plain;charset=utf-8\"});\r\n\r\n    fileSaver.saveAs(blob, \"testNG.xml\");\r\n\r\n\r\n\r\n   \r\n\r\n  }\r\n\r\n\r\n\r\nfetchData() : Observable<JSON> {\r\n\r\nconsole.log(\"Calling server api\")  \r\n\r\n   return  this.http.get<JSON>(this.returnURL);\r\n\r\n}\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}